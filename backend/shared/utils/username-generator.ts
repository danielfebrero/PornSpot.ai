import { DynamoDBService } from "./dynamodb";

// 500 adjectives for username generation
const ADJECTIVES = [
  "amazing",
  "awesome",
  "brilliant",
  "clever",
  "cool",
  "creative",
  "daring",
  "dynamic",
  "epic",
  "fabulous",
  "fantastic",
  "fierce",
  "fresh",
  "funky",
  "gentle",
  "glorious",
  "graceful",
  "groovy",
  "happy",
  "incredible",
  "inspiring",
  "jolly",
  "joyful",
  "keen",
  "kind",
  "lively",
  "lovely",
  "lucky",
  "magical",
  "marvelous",
  "mighty",
  "mysterious",
  "neat",
  "nice",
  "noble",
  "optimistic",
  "outstanding",
  "peaceful",
  "perfect",
  "playful",
  "pleasant",
  "powerful",
  "precious",
  "pretty",
  "proud",
  "quick",
  "quiet",
  "radiant",
  "remarkable",
  "robust",
  "shiny",
  "smart",
  "smooth",
  "snappy",
  "spectacular",
  "splendid",
  "strong",
  "stunning",
  "super",
  "sweet",
  "talented",
  "terrific",
  "thoughtful",
  "thrilling",
  "tremendous",
  "unique",
  "vibrant",
  "vivid",
  "warm",
  "wild",
  "wise",
  "wonderful",
  "zealous",
  "zesty",
  "zippy",
  "zany",
  "able",
  "active",
  "adorable",
  "adventurous",
  "affectionate",
  "agile",
  "alert",
  "ambitious",
  "amusing",
  "animated",
  "artistic",
  "attractive",
  "balanced",
  "beautiful",
  "bold",
  "bouncy",
  "brave",
  "bright",
  "bubbly",
  "calm",
  "capable",
  "careful",
  "caring",
  "charming",
  "cheerful",
  "classic",
  "clean",
  "clear",
  "colorful",
  "comfortable",
  "confident",
  "cooperative",
  "courageous",
  "curious",
  "cute",
  "dazzling",
  "delicate",
  "delightful",
  "determined",
  "devoted",
  "dreamy",
  "eager",
  "easy",
  "elegant",
  "energetic",
  "enthusiastic",
  "excellent",
  "exciting",
  "exotic",
  "experienced",
  "fancy",
  "fearless",
  "flexible",
  "flowing",
  "fluffy",
  "focused",
  "friendly",
  "funny",
  "generous",
  "genius",
  "genuine",
  "gifted",
  "glamorous",
  "gleaming",
  "golden",
  "gorgeous",
  "grand",
  "grateful",
  "great",
  "green",
  "handy",
  "helpful",
  "honest",
  "hopeful",
  "humble",
  "imaginative",
  "impressive",
  "independent",
  "innovative",
  "intelligent",
  "interesting",
  "inventive",
  "jaunty",
  "jazzy",
  "jubilant",
  "jumping",
  "kindly",
  "knowing",
  "laughing",
  "leading",
  "learning",
  "light",
  "likable",
  "limitless",
  "logical",
  "loving",
  "loyal",
  "magnificent",
  "majestic",
  "merry",
  "mindful",
  "modern",
  "modest",
  "motivated",
  "natural",
  "nimble",
  "open",
  "original",
  "outgoing",
  "patient",
  "peppy",
  "perky",
  "persistent",
  "polite",
  "popular",
  "positive",
  "practical",
  "prepared",
  "productive",
  "proficient",
  "promising",
  "protected",
  "pure",
  "qualified",
  "rare",
  "ready",
  "real",
  "reasonable",
  "reassuring",
  "refined",
  "reliable",
  "reserved",
  "respectful",
  "responsible",
  "rich",
  "righteous",
  "romantic",
  "royal",
  "safe",
  "satisfied",
  "secure",
  "selective",
  "sensible",
  "serious",
  "sharp",
  "sincere",
  "skilled",
  "smiling",
  "solid",
  "sophisticated",
  "sparkling",
  "special",
  "spirited",
  "stable",
  "steady",
  "stellar",
  "stylish",
  "successful",
  "sunny",
  "superior",
  "supportive",
  "sure",
  "swift",
  "talented",
  "tidy",
  "timely",
  "tranquil",
  "trustworthy",
  "truthful",
  "understanding",
  "unreal",
  "upbeat",
  "updated",
  "uplifting",
  "valuable",
  "versatile",
  "victorious",
  "vigorous",
  "vital",
  "vivacious",
  "wealthy",
  "welcome",
  "wholesome",
  "willing",
  "winning",
  "witty",
  "worthy",
  "youthful",
  "zestful",
  "abundant",
  "acclaimed",
  "accomplished",
  "accurate",
  "adaptable",
  "adequate",
  "admirable",
  "advanced",
  "affable",
  "agreeable",
  "airy",
  "alive",
  "alluring",
  "amazing",
  "analytical",
  "angelic",
  "appealing",
  "appreciated",
  "approachable",
  "appropriate",
  "articulate",
  "assured",
  "astounding",
  "athletic",
  "attentive",
  "authentic",
  "authoritative",
  "available",
  "aware",
  "badass",
  "balanced",
  "basic",
  "beneficial",
  "best",
  "blissful",
  "blooming",
  "booming",
  "breathtaking",
  "brilliant",
  "broad",
  "busy",
  "capable",
  "captivating",
  "caring",
  "celebrated",
  "centered",
  "certain",
  "champion",
  "charismatic",
  "charitable",
  "chic",
  "choice",
  "chosen",
  "classy",
  "clever",
  "climactic",
  "close",
  "colossal",
  "comfortable",
  "commanding",
  "compassionate",
  "compelling",
  "competent",
  "complete",
  "comprehensive",
  "concentrated",
  "concerned",
  "concise",
  "concrete",
  "considerate",
  "consistent",
  "constructive",
  "contemporary",
  "content",
  "contributing",
  "convenient",
  "conventional",
  "convincing",
  "coordinated",
  "correct",
  "cosmic",
  "courteous",
  "crafty",
  "credible",
  "crucial",
  "cultural",
  "dapper",
  "daring",
  "decisive",
  "dedicated",
  "deep",
  "definite",
  "delicious",
  "dependable",
  "descriptive",
  "desirable",
  "detailed",
  "developed",
  "different",
  "direct",
  "distinctive",
  "diverse",
  "divine",
  "dominant",
  "dynamic",
  "earnest",
  "effective",
  "efficient",
  "elaborate",
  "electric",
  "emotional",
  "empowered",
  "enchanting",
  "encouraging",
  "endless",
  "engaging",
  "enhanced",
  "enormous",
  "entertaining",
  "entire",
  "equipped",
  "essential",
  "established",
  "ethical",
  "everlasting",
  "evident",
  "exceptional",
  "exclusive",
  "executive",
  "exemplary",
  "expert",
  "expressive",
  "extensive",
  "extra",
  "extraordinary",
  "extreme",
  "fair",
  "faithful",
  "famous",
  "fantastic",
  "fashionable",
  "fast",
  "favorable",
  "featured",
  "fine",
  "first",
  "fit",
  "fitting",
  "flashy",
  "flawless",
  "flourishing",
  "fluid",
  "foremost",
  "formal",
  "fortunate",
  "forward",
  "free",
  "frequent",
  "full",
  "functional",
  "fundamental",
  "future",
  "generous",
  "gentle",
  "genuine",
  "giving",
  "global",
  "glowing",
  "good",
  "gracious",
  "grand",
  "great",
  "growing",
  "guaranteed",
  "happy",
  "hardworking",
  "harmonious",
  "healthy",
  "heavy",
  "helpful",
  "high",
  "honored",
  "hot",
  "huge",
  "human",
  "ideal",
  "immediate",
  "immense",
  "important",
  "improved",
  "incredible",
  "independent",
  "individual",
  "infinite",
  "influential",
  "informal",
  "informed",
  "initial",
  "inner",
  "innovative",
  "inspired",
  "instant",
  "instructive",
  "integral",
  "intelligent",
  "intense",
  "interactive",
  "interested",
  "interesting",
  "internal",
  "international",
  "intimate",
  "intricate",
  "intuitive",
  "invaluable",
  "involved",
  "joint",
  "joyous",
  "keen",
  "key",
  "kind",
  "large",
  "lasting",
  "latest",
  "leading",
  "learned",
  "legal",
  "legendary",
  "legitimate",
  "liberal",
  "limited",
  "live",
  "local",
  "logical",
  "long",
  "loyal",
  "main",
  "major",
  "massive",
  "masterful",
  "maximum",
  "meaningful",
  "medium",
  "memorable",
  "mental",
  "mild",
  "minimum",
  "minor",
  "mobile",
  "model",
  "moderate",
  "modern",
  "modest",
  "moral",
  "motivated",
  "moving",
  "multiple",
  "mutual",
  "national",
  "native",
  "natural",
  "nearby",
  "necessary",
  "new",
  "next",
  "nice",
  "noble",
  "normal",
  "notable",
  "novel",
  "objective",
  "obvious",
  "official",
  "online",
  "open",
  "optimal",
  "optional",
  "ordinary",
  "organic",
  "organized",
  "original",
  "other",
  "outstanding",
  "overall",
  "own",
  "particular",
  "passionate",
  "patient",
  "peaceful",
  "perfect",
  "permanent",
  "personal",
  "physical",
  "plain",
  "planned",
  "pleasant",
  "pleased",
  "plus",
  "polished",
  "popular",
  "positive",
  "possible",
  "potential",
  "practical",
  "precise",
  "preferred",
  "premium",
  "present",
  "previous",
  "primary",
  "prime",
  "principal",
  "prior",
  "private",
  "probable",
  "productive",
  "professional",
  "profitable",
  "prominent",
  "proper",
  "prospective",
  "protective",
  "proud",
  "proven",
  "public",
  "pure",
  "qualified",
  "quality",
  "quick",
  "quiet",
  "rapid",
  "rare",
  "raw",
  "ready",
  "real",
  "reasonable",
  "recent",
  "recognized",
  "recommended",
  "refined",
  "regular",
  "related",
  "relative",
  "relevant",
  "reliable",
  "remarkable",
  "remote",
  "representative",
  "required",
  "residential",
  "respected",
  "responsible",
  "rich",
  "right",
  "routine",
  "royal",
  "safe",
  "satisfied",
  "scientific",
  "secure",
  "select",
  "senior",
  "separate",
  "serious",
  "shared",
  "sharp",
  "short",
  "significant",
  "similar",
  "simple",
  "single",
  "skilled",
  "small",
  "smart",
  "smooth",
  "social",
  "soft",
  "solid",
  "sophisticated",
  "sound",
  "spacious",
  "special",
  "specific",
  "spectacular",
  "spiritual",
  "stable",
  "standard",
  "stellar",
  "strategic",
  "strong",
  "structured",
  "stunning",
  "substantial",
  "successful",
  "sufficient",
  "suitable",
  "super",
  "superior",
  "supreme",
  "sure",
  "systematic",
  "technical",
  "thorough",
  "timely",
  "total",
  "traditional",
  "tremendous",
  "typical",
  "ultimate",
  "unique",
  "universal",
  "updated",
  "useful",
  "valuable",
  "varied",
  "vast",
  "vital",
  "warm",
  "welcome",
  "whole",
  "wide",
  "wonderful",
  "worthy",
  "accurate",
  "advanced",
];

// 500 nouns for username generation
const NOUNS = [
  "angel",
  "artist",
  "athlete",
  "author",
  "baker",
  "builder",
  "captain",
  "champion",
  "chef",
  "dancer",
  "designer",
  "doctor",
  "driver",
  "engineer",
  "explorer",
  "fighter",
  "friend",
  "genius",
  "guardian",
  "hero",
  "hunter",
  "inventor",
  "judge",
  "keeper",
  "leader",
  "master",
  "musician",
  "ninja",
  "owner",
  "pilot",
  "player",
  "queen",
  "ranger",
  "ruler",
  "sailor",
  "teacher",
  "traveler",
  "warrior",
  "writer",
  "wizard",
  "admiral",
  "agent",
  "archer",
  "baron",
  "beast",
  "bird",
  "blade",
  "boss",
  "boxer",
  "brave",
  "chief",
  "clone",
  "comet",
  "count",
  "crown",
  "demon",
  "duke",
  "eagle",
  "elite",
  "emperor",
  "falcon",
  "flame",
  "force",
  "ghost",
  "giant",
  "goddess",
  "guard",
  "hawk",
  "horse",
  "icon",
  "joker",
  "knight",
  "legend",
  "lion",
  "lord",
  "mage",
  "mayor",
  "monk",
  "monster",
  "oracle",
  "prince",
  "princess",
  "prophet",
  "rebel",
  "robot",
  "sage",
  "scout",
  "shadow",
  "shark",
  "shield",
  "sniper",
  "soldier",
  "spirit",
  "star",
  "stone",
  "storm",
  "sword",
  "tiger",
  "titan",
  "vampire",
  "viper",
  "wolf",
  "zombie",
  "ace",
  "alpha",
  "anchor",
  "arrow",
  "atomic",
  "avatar",
  "axe",
  "badge",
  "banner",
  "beam",
  "bear",
  "bell",
  "bolt",
  "bomb",
  "book",
  "bullet",
  "castle",
  "chain",
  "charm",
  "circle",
  "clock",
  "cloud",
  "code",
  "coin",
  "core",
  "crystal",
  "cube",
  "dagger",
  "diamond",
  "door",
  "dragon",
  "dream",
  "drop",
  "echo",
  "edge",
  "ember",
  "eye",
  "fang",
  "feather",
  "fire",
  "fist",
  "flash",
  "flower",
  "forge",
  "fortress",
  "frost",
  "gem",
  "glow",
  "gold",
  "hammer",
  "heart",
  "horn",
  "ice",
  "island",
  "jewel",
  "key",
  "lance",
  "leaf",
  "light",
  "magic",
  "mask",
  "moon",
  "mountain",
  "needle",
  "nova",
  "ocean",
  "orb",
  "pearl",
  "phoenix",
  "pulse",
  "quake",
  "rain",
  "ray",
  "ring",
  "river",
  "rock",
  "rose",
  "scale",
  "scar",
  "seal",
  "seed",
  "shine",
  "silver",
  "sky",
  "snow",
  "soul",
  "spark",
  "sphere",
  "spike",
  "steel",
  "stream",
  "sun",
  "thunder",
  "torch",
  "tower",
  "tree",
  "void",
  "wave",
  "wind",
  "wing",
  "zone",
  "academy",
  "adventure",
  "alliance",
  "arena",
  "army",
  "art",
  "assault",
  "atom",
  "attack",
  "battle",
  "beach",
  "blade",
  "blaze",
  "blood",
  "boom",
  "burst",
  "cage",
  "camp",
  "canyon",
  "card",
  "cave",
  "chase",
  "city",
  "clash",
  "coast",
  "code",
  "combat",
  "comet",
  "corp",
  "crash",
  "crew",
  "crown",
  "cyber",
  "dance",
  "data",
  "dawn",
  "deck",
  "delta",
  "depot",
  "earth",
  "echo",
  "elite",
  "empire",
  "energy",
  "epic",
  "era",
  "event",
  "exile",
  "expo",
  "face",
  "fall",
  "fate",
  "field",
  "fight",
  "fire",
  "fleet",
  "flight",
  "flow",
  "force",
  "forge",
  "form",
  "fort",
  "frame",
  "front",
  "fury",
  "game",
  "gate",
  "gear",
  "glory",
  "goal",
  "grace",
  "grid",
  "ground",
  "group",
  "guard",
  "guild",
  "haven",
  "head",
  "heart",
  "heat",
  "helm",
  "hill",
  "honor",
  "hope",
  "host",
  "hour",
  "hunt",
  "icon",
  "idea",
  "impact",
  "iron",
  "isle",
  "jade",
  "jazz",
  "jet",
  "jump",
  "keep",
  "labs",
  "lake",
  "land",
  "last",
  "league",
  "lens",
  "life",
  "line",
  "link",
  "live",
  "load",
  "lock",
  "loop",
  "lore",
  "luck",
  "mach",
  "mark",
  "mass",
  "maze",
  "mesh",
  "mind",
  "mine",
  "mode",
  "moon",
  "move",
  "myth",
  "navy",
  "nest",
  "net",
  "node",
  "nova",
  "oath",
  "odds",
  "open",
  "opus",
  "pace",
  "pack",
  "page",
  "park",
  "pass",
  "path",
  "peak",
  "plan",
  "play",
  "plot",
  "plus",
  "poem",
  "pool",
  "port",
  "post",
  "pure",
  "quad",
  "race",
  "rage",
  "rank",
  "rate",
  "rave",
  "real",
  "reef",
  "rest",
  "rich",
  "ride",
  "rise",
  "risk",
  "road",
  "role",
  "room",
  "root",
  "rule",
  "rush",
  "safe",
  "sage",
  "sand",
  "save",
  "scan",
  "seal",
  "sect",
  "seed",
  "self",
  "ship",
  "shop",
  "shot",
  "show",
  "side",
  "sign",
  "site",
  "size",
  "slot",
  "snap",
  "soft",
  "soul",
  "spot",
  "star",
  "step",
  "stop",
  "surf",
  "swap",
  "sync",
  "tale",
  "tank",
  "task",
  "team",
  "tech",
  "term",
  "test",
  "text",
  "tide",
  "tile",
  "time",
  "tone",
  "tool",
  "tops",
  "toss",
  "tour",
  "town",
  "trek",
  "trio",
  "trip",
  "tune",
  "turn",
  "twin",
  "type",
  "unit",
  "user",
  "vast",
  "vibe",
  "view",
  "void",
  "vote",
  "walk",
  "wall",
  "ward",
  "wave",
  "ways",
  "web",
  "week",
  "west",
  "wide",
  "wild",
  "wind",
  "wing",
  "wire",
  "wise",
  "work",
  "yard",
  "year",
  "zero",
  "zone",
  "zoom",
  "abyss",
  "acid",
  "aegis",
  "aeon",
  "agent",
  "alien",
  "alpha",
  "amber",
  "angel",
  "apex",
  "arena",
  "armor",
  "arrow",
  "atlas",
  "audio",
  "azure",
  "badge",
  "basic",
  "batch",
  "beach",
  "beast",
  "bench",
  "beta",
  "birth",
  "black",
  "blast",
  "blind",
  "block",
  "bloom",
  "board",
  "boost",
  "bound",
  "brain",
  "brand",
  "brass",
  "bread",
  "break",
  "breed",
  "brick",
  "brief",
  "broad",
  "brown",
  "brush",
  "build",
  "bunch",
  "burst",
  "cabin",
  "cable",
  "candy",
  "cargo",
  "carry",
  "catch",
  "chain",
  "chair",
  "chart",
  "cheap",
  "check",
  "chess",
  "chest",
  "chief",
  "child",
  "china",
  "chord",
  "claim",
  "clash",
  "class",
  "clean",
  "clear",
  "click",
  "climb",
  "close",
  "cloth",
  "cloud",
  "coach",
  "coast",
  "comic",
  "coral",
  "court",
  "cover",
  "craft",
  "crash",
  "crazy",
  "cream",
  "creek",
  "crime",
  "crisp",
  "cross",
  "crowd",
  "crown",
  "crude",
  "curve",
  "cycle",
  "dance",
  "death",
  "debug",
  "decor",
  "depth",
  "diary",
  "digit",
  "dirty",
  "disco",
  "diver",
  "drift",
  "drill",
  "drive",
  "drone",
  "dying",
  "early",
  "elder",
  "entry",
  "equal",
  "error",
  "exact",
  "exam",
  "excel",
  "extra",
  "faith",
  "false",
  "fancy",
  "fatal",
  "favor",
  "fiber",
  "field",
  "fifth",
  "final",
  "first",
  "fixed",
  "flesh",
  "float",
  "flood",
  "floor",
  "fluid",
  "focus",
  "forth",
  "found",
  "frame",
  "frank",
  "fresh",
  "front",
  "fruit",
  "fully",
  "funny",
  "gamma",
  "ghost",
  "giant",
  "given",
  "glass",
  "globe",
  "grand",
  "grant",
  "grass",
  "grave",
  "great",
  "green",
  "gross",
  "group",
  "grown",
  "guard",
  "guest",
  "guide",
  "happy",
  "harsh",
  "heart",
  "heavy",
  "hello",
  "hobby",
  "honey",
  "horse",
  "hotel",
  "house",
  "human",
  "humor",
  "hurry",
  "icily",
  "ideal",
  "image",
  "index",
  "inner",
  "input",
  "intro",
  "issue",
  "joint",
  "judge",
  "juice",
  "known",
  "label",
  "labor",
  "large",
  "laser",
  "later",
  "laugh",
  "layer",
  "learn",
  "lease",
  "least",
  "leave",
  "level",
  "light",
  "limit",
  "linear",
  "liver",
  "local",
  "logic",
  "loose",
  "lower",
  "lucky",
  "lunch",
  "macro",
  "magic",
  "major",
  "maker",
  "maple",
  "march",
  "match",
  "mayor",
  "medal",
  "media",
  "melon",
  "mercy",
  "metal",
  "metro",
  "micro",
  "minor",
  "mixed",
  "model",
  "money",
  "month",
  "moral",
  "motor",
  "mouse",
  "mouth",
  "movie",
  "music",
  "naked",
  "named",
  "nasty",
  "naval",
  "nerve",
  "never",
  "newly",
  "night",
  "ninth",
  "noble",
  "noise",
  "north",
  "noted",
  "novel",
  "nurse",
  "ocean",
  "offer",
  "olive",
  "opera",
  "order",
  "organ",
  "other",
  "outer",
  "owner",
  "panel",
  "paper",
  "party",
  "pasta",
  "patch",
  "peace",
  "penny",
  "phase",
  "phone",
  "photo",
  "piano",
  "piece",
  "pilot",
  "pitch",
  "pixel",
  "place",
  "plain",
  "plane",
  "plant",
  "plate",
  "plaza",
  "point",
  "polar",
  "pound",
  "power",
  "press",
  "price",
  "pride",
  "prime",
  "print",
  "prior",
  "proof",
  "proud",
  "prove",
  "proxy",
  "pulse",
  "punch",
  "pupil",
  "purse",
  "queen",
  "query",
  "quest",
  "quick",
  "quiet",
  "quote",
  "radio",
  "rapid",
  "ratio",
  "razor",
  "reach",
  "ready",
  "realm",
  "rebel",
  "recap",
  "relay",
  "remix",
  "reply",
  "rider",
  "ridge",
  "right",
  "rigid",
  "rival",
  "river",
  "robot",
  "rocky",
  "roman",
  "rough",
  "round",
  "route",
  "royal",
  "rugby",
  "ruler",
  "rural",
];

/**
 * Username Generator Utility
 * Generates usernames in the format: {adjective}-{noun}-{number}
 * - 500 adjectives
 * - 500 nouns
 * - Numbers from 001 to 999
 */
export class UsernameGenerator {
  /**
   * Generate a random username with format: adjective-noun-number
   * @param maxAttempts Maximum number of attempts to find a unique username
   * @returns Promise<string> A unique username
   */
  static async generateUniqueUsername(
    maxAttempts: number = 10
  ): Promise<string> {
    for (let attempt = 1; attempt <= maxAttempts; attempt++) {
      const username = this.generateRandomUsername();

      // Check if username is available
      const existingUser = await DynamoDBService.getUserByUsername(username);
      if (!existingUser) {
        console.log(
          `✅ Generated unique username: ${username} (attempt ${attempt})`
        );
        return username;
      }

      console.log(`❌ Username ${username} already taken (attempt ${attempt})`);
    }

    // If we can't find a unique username after max attempts, fallback to timestamp-based
    const fallbackUsername = this.generateTimestampBasedUsername();
    console.log(`⚠️ Fallback to timestamp-based username: ${fallbackUsername}`);
    return fallbackUsername;
  }

  /**
   * Generate a random username without checking uniqueness
   * @returns string Username in format adjective-noun-number
   */
  static generateRandomUsername(): string {
    const adjective = this.getRandomAdjective();
    const noun = this.getRandomNoun();
    const number = this.getRandomNumber();

    return `${adjective}-${noun}-${number}`;
  }

  /**
   * Generate a timestamp-based username as fallback
   * @returns string Username with timestamp to ensure uniqueness
   */
  private static generateTimestampBasedUsername(): string {
    const adjective = this.getRandomAdjective();
    const noun = this.getRandomNoun();
    const timestamp = Date.now().toString().slice(-6); // Last 6 digits of timestamp

    return `${adjective}-${noun}-${timestamp}`;
  }

  /**
   * Get a random adjective from the list
   * @returns string Random adjective
   */
  private static getRandomAdjective(): string {
    const index = Math.floor(Math.random() * ADJECTIVES.length);
    return ADJECTIVES[index]!;
  }

  /**
   * Get a random noun from the list
   * @returns string Random noun
   */
  private static getRandomNoun(): string {
    const index = Math.floor(Math.random() * NOUNS.length);
    return NOUNS[index]!;
  }

  /**
   * Get a random number between 001 and 999
   * @returns string Three-digit number as string with leading zeros
   */
  private static getRandomNumber(): string {
    const number = Math.floor(Math.random() * 999) + 1; // 1 to 999
    return number.toString().padStart(3, "0"); // Pad with leading zeros to make it 3 digits
  }

  /**
   * Generate a username from an email address (fallback method)
   * This is used when email is available but we want to enhance it
   * @param email Email address to base username on
   * @returns string Enhanced username
   */
  static async generateUsernameFromEmail(email: string): Promise<string> {
    // Extract base from email
    const emailBase =
      email
        .split("@")[0]
        ?.toLowerCase()
        .replace(/[^a-z0-9]/g, "") || "user";

    // Try the email-based username first
    const existingUser = await DynamoDBService.getUserByUsername(emailBase);
    if (!existingUser && emailBase.length >= 3) {
      return emailBase;
    }

    // If email-based username is taken or too short, generate a random one
    return this.generateUniqueUsername();
  }

  /**
   * Repair missing username for existing user
   * This is called when a user doesn't have a username
   * @param userId User ID to repair username for
   * @param email User's email (optional, for fallback)
   * @returns Promise<string> The generated username
   */
  static async repairMissingUsername(userId: string): Promise<string> {
    console.log(`🔧 Repairing missing username for user ${userId}`);

    const username = await this.generateUniqueUsername();

    // Update the user with the new username
    await DynamoDBService.updateUser(userId, {
      username,
      GSI3PK: "USER_USERNAME",
      GSI3SK: username.toLowerCase(),
    });

    console.log(`✅ Repaired username for user ${userId}: ${username}`);
    return username;
  }

  /**
   * Check if a username follows the expected format
   * @param username Username to validate
   * @returns boolean True if format is valid
   */
  static isValidGeneratedFormat(username: string): boolean {
    // Check for adjective-noun-number format
    const parts = username.split("-");
    if (parts.length === 3) {
      const [, , number] = parts;
      // Check if number part is 3 digits or 6 digits (timestamp fallback)
      return number ? /^\d{3}$/.test(number) || /^\d{6}$/.test(number) : false;
    }
    return false;
  }
}
