{
  "name": "pornspot-ai",
  "version": "1.0.0",
  "description": "A minimalist gallery application for showcasing art and photography",
  "private": true,
  "scripts": {
    "install:all": "npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "dev:backend": "npm run build:backend && sam build && sam local start-api --port 3001 --docker-network pornspot-ai_local-network --env-vars backend/.env.local.json",
    "dev:backend:log": "npm run build:backend && sam build && sam local start-api --port 3001 --docker-network pornspot-ai_local-network --env-vars backend/.env.local.json > backend.log 2>&1",
    "dev:frontend": "cd frontend && npm run dev",
    "local:start": "docker-compose -f docker-compose.local.yml up -d",
    "local:stop": "docker-compose -f docker-compose.local.yml down",
    "local:clean": "docker-compose -f docker-compose.local.yml down -v",
    "local:init": "chmod +x scripts/init-local-aws.sh && ./scripts/init-local-aws.sh",
    "local:logs": "docker-compose -f docker-compose.local.yml logs -f localstack",
    "db:setup": "node scripts/create-dynamodb-table.js",
    "local:setup": "npm run local:init && npm run db:setup",
    "migrate:urls": "node scripts/migrate-urls-to-relative.js",
    "repair:thumbnails": "node scripts/repair-thumbnails.js",
    "cleanup:thumbnails:s3": "node scripts/cleanup-thumbnails-s3.js",
    "cleanup:thumbnails:db": "node scripts/cleanup-thumbnails-db.js",
    "cleanup:thumbnails:all": "node scripts/cleanup-thumbnails-all.js",
    "deploy": "./scripts/deploy.sh",
    "deploy:guided": "./scripts/deploy.sh --guided",
    "sam:build": "sam build",
    "sam:deploy": "sam deploy",
    "sam:local": "sam build && sam local start-api --port 3001 --docker-network pornspot-ai_local-network --env-vars backend/.env.local.json",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:fix": "npm run lint:fix:backend && npm run lint:fix:frontend",
    "lint:fix:backend": "cd backend && npm run lint:fix",
    "lint:fix:frontend": "cd frontend && npm run lint:fix",
    "test": "npm run test:backend && npm run test:frontend",
    "test:all": "concurrently \"npm run test:backend:all\" \"npm run test:frontend:all\"",
    "test:backend": "cd backend && npm run test",
    "test:backend:unit": "cd backend && npm run test:unit",
    "test:backend:integration": "cd backend && npm run test:integration",
    "test:backend:coverage": "cd backend && npm run test:coverage",
    "test:backend:all": "cd backend && npm run test:ci",
    "test:frontend": "cd frontend && npm run test",
    "test:frontend:unit": "cd frontend && npm run test",
    "test:frontend:integration": "cd frontend && npm run test",
    "test:frontend:e2e": "cd frontend && npm run test:e2e",
    "test:frontend:coverage": "cd frontend && npm run test:coverage",
    "test:frontend:all": "cd frontend && npm run test:all",
    "test:watch": "concurrently \"npm run test:backend:watch\" \"npm run test:frontend:watch\"",
    "test:backend:watch": "cd backend && npm run test:watch",
    "test:frontend:watch": "cd frontend && npm run test:watch",
    "test:coverage": "npm run test:backend:coverage && npm run test:frontend:coverage",
    "test:coverage:combined": "jest --config jest.config.root.js --coverage",
    "test:ci": "npm run test:backend:all && npm run test:frontend:all",
    "test:summary": "node scripts/generate-test-summary.js",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && npm run clean",
    "clean:frontend": "cd frontend && rm -rf .next out",
    "type-check": "npm run type-check:backend && npm run type-check:frontend",
    "type-check:backend": "cd backend && npm run build",
    "type-check:frontend": "cd frontend && npm run type-check"
  },
  "workspaces": [
    "backend",
    "frontend"
  ],
  "keywords": [
    "gallery",
    "art",
    "photography",
    "serverless",
    "aws",
    "nextjs",
    "typescript",
    "minimalist"
  ],
  "author": "pornspot.ai",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/pornspot-ai.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/pornspot-ai/issues"
  },
  "homepage": "https://pornspot.ai",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "js-yaml": "^4.1.0",
    "lcov-result-merger": "^3.3.0",
    "lint-staged": "^15.1.0"
  }
}
